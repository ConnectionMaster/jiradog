#!/bin/bash

# ./build script to build package from pristine source tarball

# Package attributes
NAME=jiradog
VERSION=$(cat meta/VERSION)
RELEASE="$(cat meta/RELEASE)"

# Run tests
./test_jiradog.py
if [[ $? -ne 0 ]]
then
  exit
fi

#. buildtools
# Set up build environment
set -x -e
export PATH=$PATH:/usr/local/ruby-sdk/ruby-1.9.3-p194/bin
export ROOT=~/opsbuild
export INSTALLROOT=$ROOT/install_root
export BUILDROOT=$ROOT/build
rm -rf $INSTALLROOT $BUILDROOT
mkdir -p $INSTALLROOT $BUILDROOT

# Unpack tarball in build environment, configure and install
# %setup 
(
    mkdir -p $INSTALLROOT/usr/local/bin $INSTALLROOT/etc/jiradog $INSTALLROOT/etc/jiradog/meta $INSTALLROOT/usr/share/man/man1
    cp metrics.schema.json $INSTALLROOT/etc/jiradog/
    cp README.md $INSTALLROOT/etc/jiradog/
    cp config.json $INSTALLROOT/etc/jiradog/
    cp metrics.json $INSTALLROOT/etc/jiradog/
    cp meta/VERSION $INSTALLROOT/etc/jiradog/meta
    cp meta/RELEASE $INSTALLROOT/etc/jiradog/meta
    cp jiradog.py $INSTALLROOT/usr/local/bin/jiradog
    cp jiradog.1 $INSTALLROOT/usr/share/man/man1/
)

# Package "installed" software using fpm command

fpm -n $NAME -v $VERSION --iteration $RELEASE \
    -s dir -t deb --template-scripts \
    --depends 'python-jinja2' \
    --python-bin python2.7 \
    --python-easyinstall easyinstall2.7 \
    --python-easyinstall sys \
    --python-easyinstall json \
    --python-easyinstall time \
    --python-easyinstall logging \
    --python-easyinstall os \
    --python-easyinstall pprint \
    --python-easyinstall hashlib \
    --python-easyinstall requests \
    --python-easyinstall jinja2 \
    --python-easyinstall datadog \
    --python-easyinstall jira \
    $INSTALLROOT/usr/local/bin=/usr/local/ \
    $INSTALLROOT/etc/jiradog=/etc/ \
    $INSTALLROOT/usr/share/man/man1=/usr/share/man/ \

# Clean up build environment
# %clean
rm -rf $INSTALLROOT
rm -rf $BUILDROOT
rm -rf $ROOT
rm -rf jiradog.pyc
